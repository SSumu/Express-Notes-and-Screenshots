Express Validator & Prisma
---------------------------

1. There can be multiple errors to username. Then we have to loop this one and create the error messages for one by one. Data from the user.mjs will be sent to the error-creator.mjs.

2.
server is running
PrismaClientKnownRequestError: 
Invalid `prisma.user.create()` invocation:


Unique constraint failed on the fields: (`Username`)
    at Vn.handleRequestError (E:\Code Practising\Express\node_modules\@prisma\client\runtime\library.js:121:7339)
    at Vn.handleAndLogRequestError (E:\Code Practising\Express\node_modules\@prisma\client\runtime\library.js:121:6663)
    at Vn.request (E:\Code Practising\Express\node_modules\@prisma\client\runtime\library.js:121:6370)
    at async l (E:\Code Practising\Express\node_modules\@prisma\client\runtime\library.js:130:9617)
    at async file:///E:/Code%20Practising/Express/src/router/user.mjs:177:5 {
  code: 'P2002',
  clientVersion: '6.2.1',
  meta: { modelName: 'User', target: [ 'Username' ] }
}

* This is a database error. This is about field must be unique.
* code: 'P2002' :- By catching this code, we can send the exact correct error to the client side.
* We use this because if we just says this is a database error, client side cannot understand what is the actual error happens in the database.


JWT Authentication & Middleware
--------------------------------

1. jsonwebtoken must be generated when a login occurs
2. key is used to verify whether the token is ours

CRUD with One to One Relation
------------------------------

When migration, database ekata profile eka wadiddi image eka danna oona userId ekka, atanin ena data walin userId eka danna oona.


CRUD with One to Many Relation
------------------------------

There it has two files named user.mjs and profile.mjs because There is a user and each user has only one profile.
We can give the token as time-based which is valid only for a specific time.

-----------------------------------
Prisma migrate command:-
npx prisma migrate dev --name init
-----------------------------------

This in Many to Many Relationship :-
If there are products which connected for category, there is a difference in the way when those products are connected to the category. Product list must be come in either create or update.

In One to Many Relationship :-
If category c(id = 1) is connected with products r(id = 1) and f(id = 2). If category z(id = 2) is connected with products r(id = 1) , f(id = 2) and z(id = 3). c cannot again connect with the r or f. So c's id with r's or f's id can be taken as complexity primary key when they take both together.

Let's consider products have been come to update then we do the work in the update.
There the one category has many products. What are the products that going to be connected to the category?. Products are connected by the Id. Unique field will be used to connnect that. UserId can also be used. But the practical way is to apply product id. Because it is the unique id.